<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.gentleflo.complimentSticker.post.gift.dao.GiftDAO">
 	<insert id="insertGift" parameterType="map">
 		INSERT INTO
 			`gift`
 		(
 			`userId`
 			, `postId`
 			, `loginId`
 			, `wishListId`
 			, `wishList`
 			, `alarmStatus`
 			, `createdAt`
 		) VALUES (
 			#{userId }
 			, #{postId }
 			, #{loginId }
 			, #{wishListId }
 			, #{wishList }
 			, 'beforeCheck'
 			, now()
 		)
 	</insert>
 	
 	
 	<select id="selectGiftAlarmByPostId" resultType="com.gentleflo.complimentSticker.post.gift.model.Gift">
 		SELECT 
 			`id`
 			, `userId`
 			, `postId`
 			, `loginId`
 			, `wishListId`
 			, `wishList`
 			, `alarmStatus`
 			, `createdAt`
 		FROM 
 			`gift`
 		WHERE
 			`postId` = #{postId }
 			AND `alarmStatus` = 'beforeCheck'
 	</select>
 	
 	<select id="selectAlarmStatusCountByPostId" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`gift`
 		WHERE
 			`postId` = #{postId }
 			AND `alarmStatus` = 'beforeCheck'
 	</select>
 	
 	
 	<update id="updateGiftAlarmStatus">
 		UPDATE 
 			`gift`
 		SET
 			`alarmStatus` = 'afterCheck'
 		WHERE
 			`postId` = #{postId }
 	</update>
 	
 	
 	<select id="selectGiftByWishListId" resultType="com.gentleflo.complimentSticker.post.gift.model.Gift">
 		SELECT
 			`id`
 			, `userId`
 			, `postId`
 			, `loginId`
 			, `wishListId`
 			, `wishList`
 			, `alarmStatus`
 			, `createdAt`
 		FROM
 			`gift`
 		WHERE
 			`wishListId` = #{wishListId }
 	</select>
 	
 	
 	<delete id="deleteGiftByPostId" parameterType="map">
 		DELETE FROM
 			`gift`
 		WHERE 
 			`postId` = #{postId }
 	</delete>
 </mapper>